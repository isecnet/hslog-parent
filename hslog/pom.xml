<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>hslog-parent</artifactId>
        <groupId>com.hs</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>hslog</artifactId>
    <packaging>war</packaging>

    <name>hslog Maven Webapp</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <!--<dependency>
            <groupId>com.hs</groupId>
            <artifactId>elasticsearch5</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>-->

        <dependency>
            <groupId>com.hs</groupId>
            <artifactId>elasticsearch7</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>hslog</finalName>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>

                <!--<build>-->

                <!--</build>-->
            </plugins>

        </pluginManagement>
        <!--<resources>
            &lt;!&ndash; maven项目中src源代码下的xml等资源文件编译进classes文件夹，
              注意：如果没有这个，它会自动搜索resources下是否有mapper.xml文件，
              如果没有就会报org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.pet.mapper.PetMapper.selectByPrimaryKey&ndash;&gt;
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>com/jz/bigdata/common/*/dao/impl/*.xml</include>
                </includes>
            </resource>

            &lt;!&ndash;将resources目录下的配置文件编译进classes文件  &ndash;&gt;
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>-->
        <!-- 强制将指定目录下xml文件打入war包 -->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/**/**/**/**/**/**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>

            <!--  intelliJ ide 需要如下配置,才能读取src目录-->
            <resource>
                <!--
                <directory>${basedir}/src</directory>
                -->
                <directory>src/main/resources</directory>
                <includes>
                    <!--
                    <include>**/**/*.properties</include>
                    <include>**/**/*.xml</include>
                    -->
                    <include>**/*.xml</include>
                    <include>**/*.json</include>
                    <include>**/*.properties</include>
                    <include>*.properties</include>
                    <include>*.xml</include>
                    <include>*.keystore</include>
                    <include>*.yml</include>
                    <include>*.mmdb</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>
